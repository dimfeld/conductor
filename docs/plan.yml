plan:
  - title: 'Agent Core Loop MVP'
    focus: 'Implement basic agent functionality with console interface and state management'
    stories:
      - title: 'Core Infrastructure Setup'
        completed: true
        description: 'Set up basic project structure with necessary dependencies'
        testing: 'Verify project builds and dependencies are correctly configured'
        subtasks:
          - title: 'Set up AI SDK integration'
            completed: true

      - title: 'Project Configuration File'
        completed: false
        description: 'Create a project configuration file format'
        testing: 'Verify project configuration file is correctly parsed'
        subtasks:
          - title: 'Create project plan YAML file format'
            completed: true
          - title: 'Create project configuration file format in `docs/project.yml`'
            completed: false
          - title: 'Configuration file includes a list of technologies used'
            completed: false

      - title: 'Task Input System'
        completed: false
        description: 'Implement console-based task input using inquirer'
        testing: 'Verify task input is correctly captured and stored'
        subtasks:
          - title: 'Create task input prompt interface'
            completed: false
          - title: 'Implement task storage in database'
            completed: false
          - title: 'Add input validation'
            completed: false
          - title: 'Create commit after task creation'
            completed: false

      - title: 'Task Planning System'
        completed: false
        description: 'Integrate with aider to generate implementation plans'
        testing: 'Verify plan generation and storage works correctly'
        subtasks:
          - title: 'Set up aider integration'
            completed: false
          - title: 'Implement plan generation logic'
            completed: false
          - title: 'Create plan storage in markdown'
            completed: false
          - title: 'Add commit step for plan creation'
            completed: false
          - title: 'Store record of planning step in database'
            completed: false

      - title: 'Interface Definition Step'
        completed: false
        description: 'Create system to define and store interface types'
        testing: 'Verify type definitions are generated correctly'
        subtasks:
          - title: 'Create interface generation logic'
            completed: false
          - title: 'Implement type definition storage'
            completed: false
          - title: 'Add validation for generated types'
            completed: false
          - title: 'Create commit step for interface definitions'
            completed: false
          - title: 'Store record of interface step in database'
            completed: false

      - title: 'Code Generation - Frontend'
        completed: false
        description: 'Implement frontend code generation based on interface'
        testing: 'Verify generated frontend code matches interface'
        subtasks:
          - title: 'Create frontend code generation logic'
            completed: false
          - title: 'Implement template system'
            completed: false
          - title: 'Add type validation'
            completed: false
          - title: 'Create commit step for frontend code'
            completed: false
          - title: 'Store record of frontend generation step in database'
            completed: false

      - title: 'Code Generation - Backend'
        completed: false
        description: 'Implement backend code generation based on interface'
        testing: 'Verify generated backend code matches interface'
        subtasks:
          - title: 'Create backend code generation logic'
            completed: false
          - title: 'Implement API endpoint generation'
            completed: false
          - title: 'Add type validation'
            completed: false
          - title: 'Create commit step for backend code'
            completed: false
          - title: 'Store record of backend generation step in database'
            completed: false

      - title: 'Type Checking System'
        completed: false
        description: 'Implement automatic type checking and fixing'
        testing: 'Verify type issues are detected and resolved'
        subtasks:
          - title: 'Create type checking automation'
            completed: false
          - title: 'Implement error detection'
            completed: false
          - title: 'Add automatic fix generation'
            completed: false
          - title: 'Create commit step for type fixes'
            completed: false
          - title: 'Store record of type checking step in database'
            completed: false

      - title: 'Test Generation System'
        completed: false
        description: 'Create test generation and execution pipeline'
        testing: 'Verify tests are generated and run correctly'
        subtasks:
          - title: 'Implement test generation logic'
            completed: false
          - title: 'Create test execution system'
            completed: false
          - title: 'Add test result tracking'
            completed: false
          - title: 'Create commit step for tests'
            completed: false
          - title: 'Store test generation step in database'
            completed: false

      - title: 'Test Running Loop'
        completed: false
        description: 'Implement test execution and fix cycle'
        testing: 'Verify test failures are addressed and fixed'
        subtasks:
          - title: 'Create test execution loop'
            completed: false
          - title: 'Implement fix generation'
            completed: false
          - title: 'Add progress tracking'
            completed: false
          - title: 'Create commit step for fixes'
            completed: false
          - title: 'Store test running step in database'
            completed: false

      - title: 'Code Formatting System'
        completed: false
        description: 'Implement code formatting step'
        testing: 'Verify code meets style guidelines'
        subtasks:
          - title: 'Set up code formatter'
            completed: false
          - title: 'Implement formatting automation'
            completed: false
          - title: 'Add format verification'
            completed: false
          - title: 'Create commit step for formatting'
            completed: false
          - title: 'Store formatting step in database'
            completed: false

      - title: 'Documentation Update System'
        completed: false
        description: 'Implement documentation and lessons learned updates'
        testing: 'Verify documentation is correctly updated'
        subtasks:
          - title: 'Create documentation update logic'
            completed: false
          - title: 'Implement lessons learned storage'
            completed: false
          - title: 'Add documentation validation'
            completed: false
          - title: 'Create commit step for documentation'
            completed: false
          - title: 'Store documentation step in database'
            completed: false

      - title: 'State Machine Integration'
        completed: false
        description: 'Implement langgraph state machine for core loop'
        testing: 'Verify state transitions work correctly'
        subtasks:
          - title: 'Define state machine states'
            completed: false
          - title: 'Implement state transitions'
            completed: false
          - title: 'Add error handling'
            completed: false
          - title: 'Create progress tracking'
            completed: false
          - title: 'Store state machine logs in database'
            completed: false

      - title: 'File Map System'
        completed: false
        description: 'The file map lists information about every source file in the project'
        testing: 'Verify file map is generated correctly'
        subtasks:
          - title: 'Create file map generation logic'
            completed: false
          - title: 'Use an LLM to get a one-line description of each file'
            completed: false
          - title: 'Store the file map in a YAML file in docs/file_map.yml'
            completed: false
          - title: 'Add file map validation'
            completed: false

dependencies:
  - 'Core Infrastructure must be completed first'
  - 'Task Input System must be completed before Planning System'
  - 'Interface Definition must be completed before any code generation'
  - 'Code Generation (both frontend and backend) must be completed before Type Checking'
  - 'Test Generation must be completed before Test Running Loop'
  - 'Formatting and Documentation systems can be implemented last'
  - 'State Machine Integration should be implemented incrementally with each story'

notes:
  - 'Each story should include database schema updates if needed'
  - 'Every step must include proper error handling and logging'
  - 'All commits should follow conventional commit format'
  - 'Progress tracking should be detailed enough for debugging'
  - 'Each story should include CLI output formatting'
